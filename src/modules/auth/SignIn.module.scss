/**
 * Copyright 2024 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@use 'styles/common' as *;

.root {
  block-size: 100vh;
  overflow-x: hidden;
  overflow-y: auto;
  scrollbar-gutter: stable;
  display: flex;
  justify-content: center;
  padding-block: $spacing-08;
  > * {
    margin-block: auto;
  }
}

// We want to match IBMid login page layout
.loginGrid {
  inline-size: 100%;
  max-inline-size: 99rem;
  padding-inline: $grid-gutter;
  display: grid;
  align-items: stretch;
  column-gap: $spacing-08;
}

.content {
  display: flex;
  flex-direction: column;
  row-gap: $spacing-07;
  position: relative;
  z-index: 1;

  .contentInner {
    display: flex;
    flex-direction: column;
    justify-content: center;
    flex-grow: 1;
  }

  :global(.#{$prefix}--inline-notification) {
    max-inline-size: 100%;
    inline-size: max-content;
    margin-block-end: $spacing-07;
  }

  h2 {
    font-size: rem(20px);
    line-height: 28 / 20;
    margin-block-end: $spacing-03;
  }

  hr {
    inline-size: 100%;
    border: 0;
    border-block-start: 1px solid $border-subtle;
    margin-block: $spacing-07;
  }
}

.heading {
  @include type-style('heading-06');
  @include font-family(serif);
  display: flex;
  align-items: flex-start;
  margin-block-end: $spacing-07;

  &.logoHeading {
    position: relative;
    flex-direction: column-reverse;

    :global(.#{$prefix}--tag) {
      margin-inline-start: 0;
    }
    svg {
      path {
        fill: $text-primary;
      }
    }
  }

  :global(.#{$prefix}--tag) {
    margin-inline-start: $spacing-03;
  }
}

.formWrapper {
  display: flex;
  flex-direction: column;
  gap: $spacing-03;
}

.form {
  display: grid;
  row-gap: $spacing-04;
  :global(.#{$prefix}--btn) {
    min-inline-size: rem(208px);
  }
}

.label {
  @include type-style('label-02');
}

.loading {
  block-size: $spacing-09;
  display: flex;
  align-items: center;
  font-size: rem(14px);
  color: $text-muted-light;
  margin-inline-start: $spacing-04;
  :global(.#{$prefix}--loading) {
    margin-inline-end: $spacing-03;
  }
}

.video {
  max-inline-size: rem(400px);
  inline-size: 100%;
  position: relative;
  pointer-events: none;
}

.videoHolder {
  margin-block: auto;
  position: absolute;
  inset-block: 0;
  inset-inline-start: 50%;
  aspect-ratio: 1 / 1;
  block-size: 200%;
  max-block-size: rem(500px);
  transform: translateX(-50%);
  video {
    position: absolute;
    inset: 0;
    inline-size: 100%;
    block-size: 100%;
  }
}

.unauthCtaButton {
  margin-block-start: $spacing-05;
}

.haveAccountHeading {
  margin-block-end: $spacing-06;
}

.loginButtonLabel {
  margin-inline-start: $spacing-04;
}

.loginButton {
  inline-size: rem(240px);
  padding-inline-end: 0;
  justify-content: flex-start;
  &.waitlistButton {
    margin-block-start: $spacing-06;
  }
  &:global(.#{$prefix}--btn--tertiary:not(:hover):not(:active)) {
    background-color: $layer;
  }
}

.footer {
  margin-block-start: $spacing-08;
  font-size: small;
  color: $text-secondary;

  > a {
    color: inherit;
    &:hover {
      text-decoration: none;
    }
  }
}

@include breakpoint-down(md) {
  .loginGrid {
    row-gap: $spacing-12;
  }

  .content {
    margin-inline: auto;
    min-inline-size: 0;
    max-inline-size: 100%;
  }

  .video {
    aspect-ratio: 1 / 1;
    grid-row-start: 1;
    margin-inline: auto;
  }
}

@include breakpoint-up(md) {
  .loginGrid {
    grid-template-columns: 40% 1fr;
  }

  .content {
    max-inline-size: rem(400px);
  }

  .video {
    max-inline-size: rem(800px);
    block-size: 100vh;
    margin-block: -$spacing-09;
  }

  .videoHolder {
    aspect-ratio: 1.5 / 1;
    block-size: 100%;
  }
}

@include breakpoint-up(lg) {
  .videoHolder {
    max-block-size: rem(1000px);
  }
}
