/**
 * Copyright 2024 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/traces": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    include_mlflow?: boolean;
                    include_mlflow_tree?: boolean;
                    include_tree?: boolean;
                    limit: number;
                    offset: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            results: {
                                finish_at: string;
                                id: string;
                                mlflow?: {
                                    /** Format: date-time */
                                    created_at: string;
                                    error?: {
                                        code: string;
                                        data?: {
                                            [key: string]: unknown;
                                        };
                                        message: string;
                                        reason?: string;
                                    } | null;
                                    id: string;
                                    request_id?: string;
                                    /** @enum {string} */
                                    step: "ADD_TREE" | "CHECK_TREE" | "CLOSE_TRACE" | "START_TRACE";
                                    tree?: {
                                        attributes: {
                                            "mlflow.spanType": string;
                                            "mlflow.traceRequestId": string;
                                        } & {
                                            [key: string]: unknown;
                                        };
                                        context: {
                                            span_id: string;
                                            trace_id: string;
                                        };
                                        end_time: number;
                                        events: {
                                            [key: string]: unknown;
                                        }[];
                                        name: string;
                                        parent_id?: string | null;
                                        start_time: number;
                                        status_code: string;
                                        status_message: string;
                                    }[];
                                } | null;
                                request: {
                                    framework?: {
                                        version: string;
                                    };
                                    history?: {
                                        [key: string]: unknown;
                                    }[];
                                    message?: string;
                                } & {
                                    [key: string]: unknown;
                                };
                                response?: {
                                    [key: string]: unknown;
                                };
                                start_at: string;
                                tree?: {
                                    children: {
                                        children: {
                                            children: {
                                                children: {
                                                    children: {
                                                        children: {
                                                            [key: string]: unknown;
                                                        }[];
                                                        /** Format: date-time */
                                                        end_time: string;
                                                        events?: {
                                                            data: {
                                                                [key: string]: unknown;
                                                            } | null;
                                                            /** Format: date-time */
                                                            end_time: string;
                                                            name: string;
                                                            /** Format: date-time */
                                                            start_time: string;
                                                            /** @enum {string} */
                                                            status_code: "ERROR" | "OK";
                                                            status_message?: string | null;
                                                        }[];
                                                        id: string;
                                                        /** Format: date-time */
                                                        start_time: string;
                                                        /** @enum {string} */
                                                        status_code: "ERROR" | "OK";
                                                        target: string;
                                                    }[];
                                                    /** Format: date-time */
                                                    end_time: string;
                                                    events?: {
                                                        data: {
                                                            [key: string]: unknown;
                                                        } | null;
                                                        /** Format: date-time */
                                                        end_time: string;
                                                        name: string;
                                                        /** Format: date-time */
                                                        start_time: string;
                                                        /** @enum {string} */
                                                        status_code: "ERROR" | "OK";
                                                        status_message?: string | null;
                                                    }[];
                                                    id: string;
                                                    /** Format: date-time */
                                                    start_time: string;
                                                    /** @enum {string} */
                                                    status_code: "ERROR" | "OK";
                                                    target: string;
                                                }[];
                                                /** Format: date-time */
                                                end_time: string;
                                                events?: {
                                                    data: {
                                                        [key: string]: unknown;
                                                    } | null;
                                                    /** Format: date-time */
                                                    end_time: string;
                                                    name: string;
                                                    /** Format: date-time */
                                                    start_time: string;
                                                    /** @enum {string} */
                                                    status_code: "ERROR" | "OK";
                                                    status_message?: string | null;
                                                }[];
                                                id: string;
                                                /** Format: date-time */
                                                start_time: string;
                                                /** @enum {string} */
                                                status_code: "ERROR" | "OK";
                                                target: string;
                                            }[];
                                            /** Format: date-time */
                                            end_time: string;
                                            events?: {
                                                data: {
                                                    [key: string]: unknown;
                                                } | null;
                                                /** Format: date-time */
                                                end_time: string;
                                                name: string;
                                                /** Format: date-time */
                                                start_time: string;
                                                /** @enum {string} */
                                                status_code: "ERROR" | "OK";
                                                status_message?: string | null;
                                            }[];
                                            id: string;
                                            /** Format: date-time */
                                            start_time: string;
                                            /** @enum {string} */
                                            status_code: "ERROR" | "OK";
                                            target: string;
                                        }[];
                                        /** Format: date-time */
                                        end_time: string;
                                        events?: {
                                            data: {
                                                [key: string]: unknown;
                                            } | null;
                                            /** Format: date-time */
                                            end_time: string;
                                            name: string;
                                            /** Format: date-time */
                                            start_time: string;
                                            /** @enum {string} */
                                            status_code: "ERROR" | "OK";
                                            status_message?: string | null;
                                        }[];
                                        id: string;
                                        /** Format: date-time */
                                        start_time: string;
                                        /** @enum {string} */
                                        status_code: "ERROR" | "OK";
                                        target: string;
                                    }[];
                                    /** Format: date-time */
                                    end_time: string;
                                    events?: {
                                        data: {
                                            [key: string]: unknown;
                                        } | null;
                                        /** Format: date-time */
                                        end_time: string;
                                        name: string;
                                        /** Format: date-time */
                                        start_time: string;
                                        /** @enum {string} */
                                        status_code: "ERROR" | "OK";
                                        status_message?: string | null;
                                    }[];
                                    id: string;
                                    /** Format: date-time */
                                    start_time: string;
                                    /** @enum {string} */
                                    status_code: "ERROR" | "OK";
                                    target: string;
                                }[] | null;
                            }[];
                            total_count: number;
                        };
                    };
                };
                /** @description Server could not understand the request due to invalid syntax. In most cases relates with the schema validation. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BadRequestResponse"];
                    };
                };
                /** @description Unauthorized route access. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UnauthorizedResponse"];
                    };
                };
                /** @description The server encountered an unexpected condition that prevented it from fulfilling the request. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InternalServerErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Server could not understand the request due to invalid syntax. In most cases relates with the schema validation. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BadRequestResponse"];
                    };
                };
                /** @description Unauthorized route access. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UnauthorizedResponse"];
                    };
                };
                /** @description The server can not find requested resource. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["NotFoundResponse"];
                    };
                };
                /** @description The server encountered an unexpected condition that prevented it from fulfilling the request. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InternalServerErrorResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/traces/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    include_mlflow?: boolean;
                    include_mlflow_tree?: boolean;
                    include_tree?: boolean;
                };
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            result: {
                                finish_at: string;
                                id: string;
                                mlflow?: {
                                    /** Format: date-time */
                                    created_at: string;
                                    error?: {
                                        code: string;
                                        data?: {
                                            [key: string]: unknown;
                                        };
                                        message: string;
                                        reason?: string;
                                    } | null;
                                    id: string;
                                    request_id?: string;
                                    /** @enum {string} */
                                    step: "ADD_TREE" | "CHECK_TREE" | "CLOSE_TRACE" | "START_TRACE";
                                    tree?: {
                                        attributes: {
                                            "mlflow.spanType": string;
                                            "mlflow.traceRequestId": string;
                                        } & {
                                            [key: string]: unknown;
                                        };
                                        context: {
                                            span_id: string;
                                            trace_id: string;
                                        };
                                        end_time: number;
                                        events: {
                                            [key: string]: unknown;
                                        }[];
                                        name: string;
                                        parent_id?: string | null;
                                        start_time: number;
                                        status_code: string;
                                        status_message: string;
                                    }[];
                                } | null;
                                request: {
                                    framework?: {
                                        version: string;
                                    };
                                    history?: {
                                        [key: string]: unknown;
                                    }[];
                                    message?: string;
                                } & {
                                    [key: string]: unknown;
                                };
                                response?: {
                                    [key: string]: unknown;
                                };
                                start_at: string;
                                tree?: {
                                    children: {
                                        children: {
                                            children: {
                                                children: {
                                                    children: {
                                                        children: {
                                                            [key: string]: unknown;
                                                        }[];
                                                        /** Format: date-time */
                                                        end_time: string;
                                                        events?: {
                                                            data: {
                                                                [key: string]: unknown;
                                                            } | null;
                                                            /** Format: date-time */
                                                            end_time: string;
                                                            name: string;
                                                            /** Format: date-time */
                                                            start_time: string;
                                                            /** @enum {string} */
                                                            status_code: "ERROR" | "OK";
                                                            status_message?: string | null;
                                                        }[];
                                                        id: string;
                                                        /** Format: date-time */
                                                        start_time: string;
                                                        /** @enum {string} */
                                                        status_code: "ERROR" | "OK";
                                                        target: string;
                                                    }[];
                                                    /** Format: date-time */
                                                    end_time: string;
                                                    events?: {
                                                        data: {
                                                            [key: string]: unknown;
                                                        } | null;
                                                        /** Format: date-time */
                                                        end_time: string;
                                                        name: string;
                                                        /** Format: date-time */
                                                        start_time: string;
                                                        /** @enum {string} */
                                                        status_code: "ERROR" | "OK";
                                                        status_message?: string | null;
                                                    }[];
                                                    id: string;
                                                    /** Format: date-time */
                                                    start_time: string;
                                                    /** @enum {string} */
                                                    status_code: "ERROR" | "OK";
                                                    target: string;
                                                }[];
                                                /** Format: date-time */
                                                end_time: string;
                                                events?: {
                                                    data: {
                                                        [key: string]: unknown;
                                                    } | null;
                                                    /** Format: date-time */
                                                    end_time: string;
                                                    name: string;
                                                    /** Format: date-time */
                                                    start_time: string;
                                                    /** @enum {string} */
                                                    status_code: "ERROR" | "OK";
                                                    status_message?: string | null;
                                                }[];
                                                id: string;
                                                /** Format: date-time */
                                                start_time: string;
                                                /** @enum {string} */
                                                status_code: "ERROR" | "OK";
                                                target: string;
                                            }[];
                                            /** Format: date-time */
                                            end_time: string;
                                            events?: {
                                                data: {
                                                    [key: string]: unknown;
                                                } | null;
                                                /** Format: date-time */
                                                end_time: string;
                                                name: string;
                                                /** Format: date-time */
                                                start_time: string;
                                                /** @enum {string} */
                                                status_code: "ERROR" | "OK";
                                                status_message?: string | null;
                                            }[];
                                            id: string;
                                            /** Format: date-time */
                                            start_time: string;
                                            /** @enum {string} */
                                            status_code: "ERROR" | "OK";
                                            target: string;
                                        }[];
                                        /** Format: date-time */
                                        end_time: string;
                                        events?: {
                                            data: {
                                                [key: string]: unknown;
                                            } | null;
                                            /** Format: date-time */
                                            end_time: string;
                                            name: string;
                                            /** Format: date-time */
                                            start_time: string;
                                            /** @enum {string} */
                                            status_code: "ERROR" | "OK";
                                            status_message?: string | null;
                                        }[];
                                        id: string;
                                        /** Format: date-time */
                                        start_time: string;
                                        /** @enum {string} */
                                        status_code: "ERROR" | "OK";
                                        target: string;
                                    }[];
                                    /** Format: date-time */
                                    end_time: string;
                                    events?: {
                                        data: {
                                            [key: string]: unknown;
                                        } | null;
                                        /** Format: date-time */
                                        end_time: string;
                                        name: string;
                                        /** Format: date-time */
                                        start_time: string;
                                        /** @enum {string} */
                                        status_code: "ERROR" | "OK";
                                        status_message?: string | null;
                                    }[];
                                    id: string;
                                    /** Format: date-time */
                                    start_time: string;
                                    /** @enum {string} */
                                    status_code: "ERROR" | "OK";
                                    target: string;
                                }[] | null;
                            };
                        };
                    };
                };
                /** @description Server could not understand the request due to invalid syntax. In most cases relates with the schema validation. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BadRequestResponse"];
                    };
                };
                /** @description Unauthorized route access. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UnauthorizedResponse"];
                    };
                };
                /** @description The server can not find requested resource. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["NotFoundResponse"];
                    };
                };
                /** @description The server encountered an unexpected condition that prevented it from fulfilling the request. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InternalServerErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/traces/{trace_id}/spans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    include_attributes_ctx?: boolean;
                };
                header?: never;
                path: {
                    trace_id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default Response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            results: {
                                attributes: {
                                    ctx?: {
                                        [key: string]: unknown;
                                    };
                                    data?: {
                                        [key: string]: unknown;
                                    };
                                    history?: {
                                        [key: string]: unknown;
                                    }[];
                                    name?: string;
                                    prompt?: string;
                                    response?: {
                                        [key: string]: unknown;
                                    };
                                    target?: string;
                                    traceId?: string;
                                    version?: string;
                                };
                                context: {
                                    span_id: string;
                                };
                                /** Format: date-time */
                                end_time: string;
                                name: string;
                                parent_id?: string;
                                /** Format: date-time */
                                start_time: string;
                                /** @enum {string} */
                                status_code: "ERROR" | "OK";
                                status_message?: string;
                            }[];
                            total_count: number;
                        };
                    };
                };
                /** @description Server could not understand the request due to invalid syntax. In most cases relates with the schema validation. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BadRequestResponse"];
                    };
                };
                /** @description Unauthorized route access. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UnauthorizedResponse"];
                    };
                };
                /** @description The server can not find requested resource. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["NotFoundResponse"];
                    };
                };
                /** @description The server encountered an unexpected condition that prevented it from fulfilling the request. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InternalServerErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        BadRequestResponse: components["schemas"]["BaseErrorResponse"] & {
            /** @enum {unknown} */
            code: "INVALID_ARGUMENT";
        };
        BaseErrorResponse: {
            code: string;
            data?: {
                [key: string]: unknown;
            };
            message: string;
            reason?: string;
        };
        InternalServerErrorResponse: components["schemas"]["BaseErrorResponse"] & {
            /** @enum {unknown} */
            code: "INTERNAL_SERVER_ERROR";
        };
        NotFoundResponse: components["schemas"]["BaseErrorResponse"] & {
            /** @enum {unknown} */
            code: "NOT_FOUND";
        };
        UnauthorizedResponse: components["schemas"]["BaseErrorResponse"] & {
            /** @enum {unknown} */
            code: "AUTH_ERROR";
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
