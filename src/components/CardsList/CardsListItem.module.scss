/**
 * Copyright 2024 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@use 'styles/common' as *;
@use '@carbon/styles/scss/utilities/button-reset';

.root {
  background-color: $background;
  box-shadow: $box-shadow;
  border-radius: $spacing-03;
  padding: $spacing-05;
  min-inline-size: 0;
  display: flex;
  flex-direction: column;
  row-gap: $spacing-04;
  position: relative;
  :global(.#{$prefix}--tag) {
    inline-size: fit-content;
  }
  &.isDeletePending {
    @include is-deleting();
  }
}

.header {
  display: flex;
  justify-content: space-between;
  column-gap: $spacing-05;
}

.body {
  display: flex;
  flex-direction: column;
  row-gap: $spacing-04;
  flex-grow: 1;
  &:first-child {
    padding-block-start: $spacing-04;
  }
  p {
    @include type-style('body-compact-01');
  }
}

.icon {
  display: flex;
  block-size: $spacing-07;
  inline-size: $spacing-07;
}

.options,
.cta {
  opacity: 0;
  transition: opacity $duration-fast-02;
  .root.focusWithin &,
  .root:hover &,
  .root:focus-within & {
    opacity: 1;
  }
}

.options {
  position: relative;
  z-index: 1;
  margin-block: rem(-6px);
  margin-inline-end: rem(-6px);
}

.name,
.description,
.label {
  &:global(.#{$prefix}--skeleton__text) {
    block-size: 1em;
  }
}

.name {
  font-size: rem(18px);
  line-height: (24 / 18);
  font-weight: bold;
  &:global(.#{$prefix}--skeleton__text) {
    inline-size: 75%;
    margin-block-end: rem(6px);
  }
  button {
    @include button-reset.reset();
    @include link-mask();
    font-weight: inherit;
    color: inherit;
    &::before {
      border: 2px solid transparent;
      border-radius: $spacing-03;
      transition: border-color $duration-fast-02;
      .root.canHover:hover &,
      .root.canHover:focus-within &,
      .root.selected & {
        border-color: $text-dark;
      }
    }
  }
}

.cta {
  @include type-style(label-02);
  color: $text-dark;
  margin-block-start: auto;
  display: flex;
  align-items: center;
  justify-content: space-between;
  column-gap: $spacing-05;
}

@include breakpoint-down(md) {
  .cta {
    display: none;
  }
}

@include breakpoint-up(md) {
  .root {
    min-block-size: rem(318px);
  }
}
