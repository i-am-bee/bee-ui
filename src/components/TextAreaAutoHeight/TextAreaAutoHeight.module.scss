/**
 * Copyright 2024 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@use 'styles/common' as *;

$line-size: (21 / 14) * 0.875rem;

.root {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: grid;
  position: relative;

  &::after {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-replicated-value) ' ';
    max-block-size: calc((var(--max-rows) * $line-size) + (2 * $spacing-04));

    /* This is how textarea text behaves */
    white-space: pre-wrap;

    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
  }

  /* Turn off automatic resize feature after the height is manually modified */
  &.resized {
    &::after {
      display: none;
    }
  }

  > textarea {
    /* After user resizes, it ruins the auto sizing */
    resize: none;
    /* Hide FF scrollbar on growth */
    overflow: hidden;
    max-block-size: var(--max-block-size);
    &::placeholder {
      color: $text-placeholder;
    }
  }

  > textarea,
  &::after {
    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;

    @include type-style(body-02);
    padding: $spacing-04;
    border: 0;
  }
}

.resizeHandle {
  position: absolute;
  inset-block-end: 0;
  inset-inline-end: 0;
  z-index: 1;
  border: none;
  background-color: transparent;
  block-size: $spacing-05;
  inline-size: $spacing-05;
  padding: $spacing-02;
  display: flex;
  align-items: flex-end;
  gap: 1px;
  cursor: ns-resize;
  color: $text-secondary;

  .resizeHandleContent {
    display: flex;
    flex-direction: column;
    align-items: center;
    transform: rotate(-45deg);
    gap: 2px;
    &::after,
    &::before {
      content: '';
      display: block;
      inline-size: rem(12px);
      block-size: 1px;
      transform-origin: center;
      background-color: currentColor;
    }
    &::after {
      inline-size: rem(5px);
    }
  }
}
